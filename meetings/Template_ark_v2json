




[
  {
    "1.0_Einführung-und-Ziele": "Brief description and extract of the requirements, The top3 (to a maximum of 5) quality objectives for the architecture, the achievement of which is critical to the key stakeholders. An overview of the most important stakeholders with their expectations regarding the architecture.",
    "1.1_Aufgabenstellung": "Short description of the functional requirements, driving forces, extract (or abstract) of requirements. Link to (hopefully existing) requirements documents (with version number and information where to find it).",
    "1.2_Qualiteatsziele": "The top three (max five) quality goals for the architecture whose fulfillment is of highest importance to the major stakeholders. We really mean quality goals for the architecture. Don’t confuse them with project goals. They are not necessarily identical. Motivation - You should know the quality goals of your most important stakeholders, since they will influence fundamental architectural decisions. Make sure to be very concrete about these qualities, avoid buzzwords. If you as an architect do not know how the quality of your work will be judged …",
    "1.3_Stakeholder": "Explicit overview of stakeholders of the system, i.e. all person, roles or organizations that should know the architecture.",
    "2.0_Randbedingungen": "Anything that constrains the team in designing and implementing the architecture. These constraints sometimes apply across the organization outside of a project.",
    "2.1_Technische-Randbedingungen": "If you dont know any constraints of your system, start looking at other systems within the organization.",
    "2.2_Organisatorische-Randbedingungen": "Organizational constraints like time and budget are for good reason unpopular with development teams, because they limit the freedom of design or implementation decisions very strongly. Therefore disclose these types of constraints. Sometimes such constraints relate to development processes, third party contracting or legal concerns. Discuss them with your management.",
    "2.3_Konventionen": "",
    "3.0_Kontextabgrenzug": "Delimits the system you are working on from external communication partners (neighboring systems and users). Specifies the external interfaces from a business perspective (always) and from a technology perspective (optional).",
    "3.1_Fachlicher-Kontext": "Specification of all communication partners (users, IT-systems, …) with explanations of domain specific inputs and outputs or interfaces. Optionally you can add domain specific formats or communication protocols.",
    "3.2_Technischer-Verteilungskontexz": "Technical interfaces (channels and transmission media) linking your system to its environment. In addition a mapping of domain specific input/output to the channels, i.e. an explanation with I/O uses which channel.",
    "4.0_Lösungsstrategien": "Summary of fundamental design decisions and solution strategies for the overall architecture. May include technology decisions, top-level decomposition strategy or approaches to achieve key quality objectives, or relevant organizational decisions.",
    "5.0_Bausteinsicht": "Static decomposition of the system. The abstraction of the source code, represented as a hierarchy of 'white boxes' (which in turn contain smaller black boxes), to an appropriate level of detail.",
    "5.1_Ebene-1": "The building block view shows the static decomposition of the system into building blocks (modules, components, subsystems, classes, interfaces, packages, libraries, frameworks, layers, partitions, tiers, functions, macros, operations, data structures, …) as well as their dependencies (relationships, associations, …) This view is mandatory for every architecture documentation. In analogy to a house this is the floor plan.",
    "5.2_Ebene-2": "",
    "6.0_Laufzeitsicht": "The behavior of the building blocks in the form of dynamic scenarios covering key processes or features, interactions at critical external interfaces or 'interesting' internal processes, and critical exception or failure cases.",
    "6.1_Laufzeitszenario-1": "The runtime view describes concrete behavior and interactions of the system’s building blocks in form of scenarios from the following areas: important use cases or features: how do building blocks execute them? interactions at critical external interfaces: how do building blocks cooperate with users and neighbouring systems? operation and administration: launch, start-up, stop error and exception scenarios",
    "6.2_Laufzeitszenario-2": "",
    "7.0_Verteilungssicht": "Technical infrastructure with (real or virtual) processors, system topology, and the mapping of software building blocks to this infrastructure.",
    "7.1_Infrastrukur-Ebene-1": "Describe (usually in a combination of diagrams, tables, and text): the distribution of your system to multiple locations, environments, computers, processors, .. as well as the physical connections between them important justification or motivation for this deployment structure, Quality and/or performance features of the infrastructure, the mapping of software artifacts (building blocks) to elements of the infrastructure",
    "7.2_Infrastrukur-Ebene-2": "Here you can include the internal structure of (some) infrastructure elements from infrastructure level 1. Please copy the structure from level 1 for each selected element.",
    "8.0_Querschnittliche-Konzepte": "Overarching, general principles and solution approaches that are used uniformly in many parts of the architecture (→ cross-cutting). Concepts often relate to several building blocks. Here, one finds topics such as domain models, architecture patterns and styles, rules for the use of certain technology stacks, etc.",
    "8.1_Struktur-Modelle": "",
    "8.2_Architektur": "",
    "9.0_Entwurfsentscheidung": "Important, expensive, or critical or risky architectural decisions that are central to the overall system, with justifications for those decisions.",
    "9.1_Entwurfsentscheidung-1": "Important, expensive, large scale or risky architecture decisions including rationales. With “decisions” we mean selecting one alternative based on given criteria. Please use your judgement to decide whether an architectural decision should be documented here in this central section or whether you better document it locally (e.g. within the white box template of one building block). Avoid redundant texts. Refer to section 4, where you captured the most important decisions of your architecture already.",
    "9.2_Entwurfsentscheidung-2": "",
    "10.0_Qualitätsanforderungen": "This section contains all quality requirements as quality tree with scenarios. The most important ones have already been described in section 1.2. (quality goals). Here you can also capture quality requirements with lesser priority, which will not create high risks when they are not fully achieved.",
    "10.1_Qualitätsbaum": "The quality tree (as defined in ATAM – Architecture Tradeoff Analysis Method) with quality/evaluation scenarios as leaves.",
    "10.2_Qualitätsszenarien": "Concretization of (sometimes vague or implicit) quality requirements using (quality) scenarios. These scenarios describe what should happen when a stimulus arrives at the system. For architects, two kinds of scenarios are important: Usage scenarios (also called application scenarios or use case scenarios) describe the system’s runtime reaction to a certain stimulus. This also includes scenarios that describe the system’s efficiency or performance. Example: The system reacts to a user’s request within one second. Change scenarios describe a modification of the system or of its immediate environment. Example: Additional functionality is implemented or requirements for a quality attribute change.",
    "11.0_Risiken-und-technische-Schulden": "A list of identified technical risks or technical debts, ordered by priority",
    "12.0_Glossar": "The most important domain and technical terms that your stakeholders use when discussing the system. You can also see the glossary as source for translations if you work in a multi-language environment (i.e. in offshore development models)."
    
    
    
  }
]

