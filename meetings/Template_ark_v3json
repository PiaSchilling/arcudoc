




[
  {
    "1.0_Einführung-und-Ziele": "Kurze Beschreibung und Extrakt der Requirements, die Top 3 (bis maximal 5) Qualitätsziele für die Architektur, deren Erreichung für die wichtigsten Stakeholder. Eine Übersicht über die wichtigsten Stakeholder mit deren Erwartungen bezüglich der Architektur.",
    "1.1_Aufgabenstellung": "Kurze Beschreibung der funktionalen Anforderungen, treibende Kräfte, Auszug (oder Zusammenfassung) der Anforderungen. Link zu (hoffentlich vorhandenen) Anforderungsdokumenten (mit Versionsnummer und Informationen, wo sie zu finden sind).",
    "1.2_Qualiteatsziele": "Die drei wichtigsten (maximal fünf) Qualitätsziele für die Architektur, deren Erfüllung für die wichtigsten Beteiligten von größter Bedeutung ist. Wir meinen damit wirklich Qualitätsziele für die Architektur. Verwechseln Sie diese nicht mit den Projektzielen. Sie sind nicht unbedingt identisch.",
    "1.3_Stakeholder": "Expliziter Überblick über die Stakeholder des Systems, d.h. alle Personen, Rollen oder Organisationen, die die Architektur kennen sollten.",
    "2.0_Randbedingungen": "Alles, was das Team beim Design und der Implementierung der Architektur einschränkt. Diese Einschränkungen sind manchmal auch außerhalb eines Projekts in der gesamten Organisation gültig.",
    "2.1_Technische-Randbedingungen": "Wenn Sie die Einschränkungen Ihres Systems nicht kennen, sollten Sie sich andere Systeme innerhalb der Organisation ansehen.",
    "2.2_Organisatorische-Randbedingungen": "Organisatorische Zwänge wie Zeit und Budget sind bei Entwicklungsteams aus gutem Grund unbeliebt, weil sie die Freiheit von Design- oder Implementierungsentscheidungen sehr stark einschränken. Legen Sie daher diese Arten von Zwängen offen. Manchmal beziehen sich solche Zwänge auf Entwicklungsprozesse, die Beauftragung Dritter oder rechtliche Belange. Besprechen Sie sie mit Ihrem Management.",
    "2.3_Konventionen": "",
    "3.0_Kontextabgrenzug": "Grenzt das System, an dem Sie arbeiten, von externen Kommunikationspartnern (Nachbarsysteme und Benutzer) ab. Spezifiziert die externen Schnittstellen aus betriebswirtschaftlicher Sicht (immer) und aus technischer Sicht (optional).",
    "3.1_Fachlicher-Kontext": "Angabe aller Kommunikationspartner (Benutzer, IT-Systeme, ...) mit Erläuterungen zu den domänenspezifischen Ein- und Ausgängen oder Schnittstellen. Optional können Sie bereichsspezifische Formate oder Kommunikationsprotokolle hinzufügen.",
    "3.2_Technischer-Verteilungskontexz": "Technische Schnittstellen (Kanäle und Übertragungsmedien), die Ihr System mit seiner Umgebung verbinden. Außerdem eine Zuordnung der bereichsspezifischen Ein-/Ausgabe zu den Kanälen, d. h. eine Erklärung, welche E/A welchen Kanal verwendet.",
    "4.0_Lösungsstrategien": "Zusammenfassung der fundamentalen Entwurfsentscheidungen und Lösungsstrategien für die Gesamtarchitektur. Kann Technologieentscheidungen, Top-Level-Zerlegungsstrategie oder Ansätze zur Erreichung der wesentlichen Qualitätsziele beinhalten, bzw. relevante Organisationsentscheidungen.",
    "5.0_Bausteinsicht": "Statische Zerlegung des Systems. Die Abstraktion des Sourcecodes, dargestellt als Hierarchie von “White-Boxes” (die wiederum kleinere Black-Boxes beinhalten), bis zu einem angemessenen Detaillierungsgrad.",
    "5.1_Ebene-1": "Die Bausteinsicht zeigt die statische Zerlegung des Systems in Bausteine (Module, Komponenten, Subsysteme, Klassen, Schnittstellen, Pakete, Bibliotheken, Frameworks, Schichten, Partitionen, Ebenen, Funktionen, Makros, Operationen, Datenstrukturen, ...) sowie deren Abhängigkeiten (Beziehungen, Assoziationen, ...) Diese Sicht ist für jede Architekturdokumentation obligatorisch. In Analogie zu einem Haus ist dies der Grundriss.",
    "5.2_Ebene-2": "",
    "6.0_Laufzeitsicht": "Das Verhalten der Bausteine in Form von dynamischen Szenarien, die die wichtigsten Prozesse oder Features abdecken, Interaktionen an kritischen externen Schnittstellen oder “interessante” interne Abläufe und kritische Ausnahme- oder Fehlerfälle.",
    "6.1_Laufzeitszenario-1": "Die Laufzeitsicht beschreibt das konkrete Verhalten und die Interaktionen der Systembausteine in Form von Szenarien aus folgenden Bereichen: wichtige Anwendungsfälle oder Funktionen: wie werden sie von den Bausteinen ausgeführt? Interaktionen an kritischen externen Schnittstellen: wie arbeiten die Bausteine mit Benutzern und Nachbarsystemen zusammen? Betrieb und Verwaltung: Start, Inbetriebnahme, Stopp, Fehler- und Ausnahmeszenarien.",
    "6.2_Laufzeitszenario-2": "Ein weiteres Laufzeitszenario kann hier aufgeführt werden.",
    "7.0_Verteilungssicht": "Technische Infrastruktur mit (echten oder virtuellen) Prozessoren, Systemtopologie, und die Abbildung der Software-Bausteine auf diese Infrastruktur.",
    "7.1_Infrastrukur-Ebene-1": "Beschreiben Sie (in der Regel in einer Kombination aus Diagrammen, Tabellen und Text): die Verteilung Ihres Systems auf mehrere Standorte, Umgebungen, Computer, Prozessoren, ... sowie die physischen Verbindungen zwischen ihnen wichtige Begründung oder Motivation für diese Einsatzstruktur, Qualitäts- und/oder Leistungsmerkmale der Infrastruktur, die Zuordnung von Software-Artefakten (Bausteinen) zu Elementen der Infrastruktur",
    "7.2_Infrastrukur-Ebene-2": "Hier können Sie die interne Struktur von (einigen) Infrastrukturelementen der Infrastrukturebene 1 übernehmen. Hier wird darum gebeten, die Struktur aus Ebene 1 für jedes ausgewählte Element zu übernehmen.",
    "8.0_Querschnittliche-Konzepte": "Übergreifende, generelle Prinzipien und Lösungsansätze, die in vielen Teilen der Architektur einheitlich benutzt werden (→ cross-cutting). Konzepte beziehen sich oft auf mehrere Bausteine. Hier findet man Themen wie Domänenmodelle, Architekturmuster und -stile, Regeln zur Nutzung bestimmter Technologiestacks, etc.",
    "8.1_Struktur-Modelle": "",
    "8.2_Architektur": "Das verwendete Architekturmuster wird hier dokumentiert.",
    "9.0_Entwurfsentscheidung": "Wichtige, teure oder kritische oder riskante Architekturentscheidungen, die zentrale Bedeutung für das Gesamtsystem haben, mit Begründungen für diese Entscheidungen.",
    "9.1_Entwurfsentscheidung-1": "Wichtige, kostspielige, groß angelegte oder riskante Architekturentscheidungen einschließlich Begründungen. Mit Entscheidungen wird die Auswahl einer Alternative auf der Grundlage bestimmter Kriterien gemeint. Bitte entscheiden Sie nach eigenem Ermessen, ob eine Architekturentscheidung hier in diesem zentralen Abschnitt dokumentiert werden sollte oder ob Sie sie besser lokal dokumentieren (z.B. innerhalb der White-Box-Vorlage eines Bausteins). Vermeiden Sie redundante Texte. Verweisen Sie auf Abschnitt 4, wo Sie die wichtigsten Entscheidungen Ihrer Architektur bereits festgehalten haben.",
    "9.2_Entwurfsentscheidung-2": "Hier kann eine weitere Entwurfsentscheidung aufgeführt werden.",
    "10.0_Qualitätsanforderungen": "Dieser Abschnitt enthält alle Qualitätsanforderungen als Qualitätsbaum mit Szenarien. Die wichtigsten wurden bereits in Abschnitt 1.2. (Qualitätsziele) beschrieben. Hier können Sie auch Qualitätsanforderungen mit geringerer Priorität erfassen, deren Nichterfüllung kein großes Risiko darstellt.",
    "10.1_Qualitätsbaum": "Der Qualitätsbaum (wie in ATAM - Architecture Tradeoff Analysis Method - definiert) mit Qualitäts-/Bewertungsszenarien als Blätter.",
    "10.2_Qualitätsszenarien": "Konkretisierung der (manchmal vagen oder impliziten) Qualitätsanforderungen durch (Qualitäts-)Szenarien. Diese Szenarien beschreiben, was passieren soll, wenn ein Stimulus am System ankommt. Für Architekten sind zwei Arten von Szenarien wichtig: Nutzungsszenarien (auch Anwendungsszenarien oder Use-Case-Szenarien genannt) beschreiben die Reaktion des Systems zur Laufzeit auf einen bestimmten Stimulus. Dazu gehören auch Szenarien, die die Effizienz oder Leistung des Systems beschreiben. Beispiel: Das System reagiert auf die Anfrage eines Benutzers innerhalb einer Sekunde. Änderungsszenarien beschreiben eine Modifikation des Systems oder seiner unmittelbaren Umgebung. Beispiel: Zusätzliche Funktionalität wird implementiert oder die Anforderungen an ein Qualitätsmerkmal ändern sich.",
    "11.0_Risiken-und-technische-Schulden": "Eine nach Priorität geordnete Liste der identifizierten technischen Risiken oder technischen Mängel.",
    "12.0_Glossar": "Die wichtigsten fachlichen und technischen Begriffe, die Ihre Stakeholder verwenden, wenn sie über das System sprechen. Sie können das Glossar auch als Quelle für Übersetzungen sehen, wenn Sie in einer mehrsprachigen Umgebung arbeiten (z. B. in Offshore-Entwicklungsmodellen)."
    
    
    
  }
]

